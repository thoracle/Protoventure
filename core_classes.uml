@startuml
skinparam classAttributeIconSize 0

class Game {
  +start_game()
  +process_command(command: str)
  +save_game()
  +load_game()
  +quit_game()
  +pause_game()
  +resume_game()
}

class StateManager {
  +current_state: GameState
  +initialize_new_game()
  +prepare_for_quit()
  +pause_game_state()
  +resume_game_state()
  +update_game_state()
}

class Player {
  +name: str
  +character_class: str
  +level: int
  +experience: int
  +stats: Dict[str, int]
  +inventory: Inventory
  +current_location: Location
  +faction_standings: Dict[Faction, int]
  +distribute_initial_stats()
  +level_up()
  +gain_experience(amount: int)
  +update_faction_standing(faction: Faction, change: int)
}

class Dragon {
  +name: str
  +color: str
  +level: int
  +abilities: List[Ability]
  +gear: List[DragonGear]
  +appearance: DragonAppearance
  +bond_with_player(player: Player)
  +use_ability(ability: Ability)
  +equip_gear(gear: DragonGear)
  +change_appearance(appearance: DragonAppearance)
  +level_up()
}

class DragonRidingManager {
  +mount_dragon(player: Player, dragon: Dragon)
  +dismount_dragon(player: Player, dragon: Dragon)
  +process_flight_input(input: str)
  +use_dragon_ability_while_flying(ability: Ability)
}

class Location {
  +name: str
  +description: str
  +connected_locations: List[Location]
  +npcs: List[NPC]
  +items: List[Item]
  +enemies: List[Enemy]
  +weather: Weather
  +get_available_actions()
  +add_item(item: Item)
  +remove_item(item: Item)
  +update_weather(weather: Weather)
}

class Faction {
  +name: str
  +description: str
  +quests: List[Quest]
  +get_player_standing(player: Player): int
  +update_player_standing(player: Player, change: int)
  +get_available_quests(player: Player): List[Quest]
}

class Quest {
  +title: str
  +description: str
  +objectives: List[Objective]
  +rewards: List[Reward]
  +required_standing: int
  +is_completed: bool
  +assign_to_player(player: Player)
  +update_progress(objective: Objective)
  +complete_quest()
}

class Inventory {
  +items: List[Item]
  +max_capacity: int
  +add_item(item: Item)
  +remove_item(item: Item)
  +use_item(item: Item)
}

class Item {
  +name: str
  +description: str
  +value: int
  +use(player: Player)
}

class Ability {
  +name: str
  +description: str
  +use(user: Any, target: Any)
}

class NPC {
  +name: str
  +faction: Faction
  +dialog: Dict[str, str]
  +quests: List[Quest]
  +inventory: Inventory
  +get_interaction_options(player: Player)
  +start_dialog(player: Player)
  +offer_quest(player: Player)
  +trade_with_player(player: Player)
}

class CombatManager {
  +initiate_combat(player: Player, enemy: Enemy)
  +process_combat_round()
  +resolve_combat()
}

class CraftingManager {
  +recipes: List[Recipe]
  +craft_item(player: Player, recipe: Recipe)
  +gather_resource(player: Player, resource: Resource)
  +learn_recipe(player: Player, recipe: Recipe)
  +dismantle_item(player: Player, item: Item)
}

class WeatherManager {
  +current_weather: Weather
  +update_weather(location: Location)
  +apply_weather_effects(player: Player, location: Location)
}

class TimeManager {
  +current_time: DateTime
  +update_time()
  +check_time_based_events()
}

class FastTravelManager {
  +travel_points: List[Location]
  +unlock_travel_point(location: Location)
  +fast_travel(player: Player, destination: Location)
}

class DragonCustomizationManager {
  +available_appearances: List[DragonAppearance]
  +available_gear: List[DragonGear]
  +change_dragon_appearance(dragon: Dragon, appearance: DragonAppearance)
  +equip_dragon_gear(dragon: Dragon, gear: DragonGear)
}

class SaveManager {
  +save_game(filename: str)
  +load_game(filename: str)
  +auto_save()
}

class UIManager {
  +current_interface: Interface
  +load_interface(interface: Interface)
  +update_display()
  +handle_user_input(input: str)
}

Game "1" -- "1" StateManager
Game "1" -- "1" Player
Game "1" -- "1" DragonRidingManager
Game "1" -- "1" CombatManager
Game "1" -- "1" CraftingManager
Game "1" -- "1" WeatherManager
Game "1" -- "1" TimeManager
Game "1" -- "1" FastTravelManager
Game "1" -- "1" DragonCustomizationManager
Game "1" -- "1" SaveManager
Game "1" -- "1" UIManager
Player "1" -- "1" Dragon
Player "1" -- "1" Inventory
Player "1" -- "1" Location
Player "1" -- "*" Faction
Faction "1" -- "*" Quest
Location "1" -- "*" NPC
Location "1" -- "*" Item
Location "1" -- "*" Enemy
NPC "1" -- "1" Inventory
@enduml
